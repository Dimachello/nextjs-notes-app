{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dima/Desktop/next-practise/next-notes/components/ContactForm/index.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nexport default function ContactForm() {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      theme: '',\n      question: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email type!').required('Required'),\n      theme: Yup.string().max(30, 'Must be 30 characters or less!').required('Required'),\n      question: Yup.string().max(200, 'Must be 200 characters or less!').required('Required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"theme\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"question\",\n        type: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/dima/Desktop/next-practise/next-notes/components/ContactForm/index.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","ContactForm","email","theme","question","object","string","required","max","values","setSubmitting","alert","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KADnB;AAMI,IAAA,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAEF,GAAG,CAACM,MAAJ,GAAaJ,KAAb,CAAmB,qBAAnB,EAA0CK,QAA1C,CAAmD,UAAnD,CADkB;AAEzBJ,MAAAA,KAAK,EAAEH,GAAG,CAACM,MAAJ,GAAaE,GAAb,CAAiB,EAAjB,EAAqB,gCAArB,EAAuDD,QAAvD,CAAgE,UAAhE,CAFkB;AAGzBH,MAAAA,QAAQ,EAAEJ,GAAG,CAACM,MAAJ,GAAaE,GAAb,CAAiB,GAAjB,EAAsB,iCAAtB,EAAyDD,QAAzD,CAAkE,UAAlE;AAHe,KAAX,CANtB;AAWI,IAAA,QAAQ,EAAE,CAACE,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACrCC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAdL;AAAA,2BAgBI,QAAC,IAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function ContactForm() {\n    return (\n        <Formik\n            initialValues={{\n                email: '',\n                theme: '',\n                question: ''\n            }}\n            validationSchema={Yup.object({\n                email: Yup.string().email('Invalid email type!').required('Required'),\n                theme: Yup.string().max(30, 'Must be 30 characters or less!').required('Required'),\n                question: Yup.string().max(200, 'Must be 200 characters or less!').required('Required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                alert(JSON.stringify(values, null, 2));\n                setSubmitting(false);\n            }}\n        >\n            <Form>\n                <Field name=\"email\" type=\"email\" />\n                <ErrorMessage name=\"email\" />\n                <Field name=\"theme\" type=\"text\" />\n                <ErrorMessage name=\"theme\" />\n                <Field name=\"question\" type=\"textarea\" />\n                <ErrorMessage name=\"question\" />\n                <button type=\"submit\">Submit</button>\n            </Form>\n        </Formik>\n    )\n}"]},"metadata":{},"sourceType":"module"}