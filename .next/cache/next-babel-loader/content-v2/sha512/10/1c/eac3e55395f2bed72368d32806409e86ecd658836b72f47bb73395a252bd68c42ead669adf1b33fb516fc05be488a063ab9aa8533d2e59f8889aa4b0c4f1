{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dima/Desktop/next-practise/next-notes/components/Topic/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { toggleModalHandler } from '../../utils/handlers';\nimport LabelModal from '../LabelModal';\nimport { StatusModal } from '../common/StatusModal';\nimport { MainSecondary } from '../../constants/stylesConstants';\nexport default function TopicModal({\n  topic,\n  deleteTopic\n}) {\n  const {\n    0: topicObj,\n    1: setTopic\n  } = useState(topic);\n  const {\n    0: showModal,\n    1: setModal\n  } = useState(false);\n\n  const getCurrentLabels = updated => {\n    const updatedTopic = _objectSpread(_objectSpread({}, topic), {}, {\n      labels: updated\n    });\n\n    setTopic(updatedTopic);\n  };\n\n  const updateLabelsHandler = label => {\n    const labels = [...topicObj.labels];\n    labels.push({\n      id: label,\n      text: label\n    });\n    StatusModal.fire({\n      title: 'Label added!'\n    });\n    setTopic(prevState => {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        labels\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopicWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(TopicContainer, {\n        onClick: () => toggleModalHandler(setModal),\n        children: [/*#__PURE__*/_jsxDEV(TopicHeader, {\n          children: topicObj.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), !topicObj.labels.length ? null : /*#__PURE__*/_jsxDEV(LabelsContainer, {\n          children: topicObj.labels.map(label => {\n            return /*#__PURE__*/_jsxDEV(Label, {\n              children: [\"- \", label.text]\n            }, label.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          children: topicObj.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: /*#__PURE__*/_jsxDEV(DeleteTopic, {\n          id: topicObj.id,\n          onClick: deleteTopic,\n          children: \"Delete topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), showModal ? /*#__PURE__*/_jsxDEV(LabelModal, {\n      topic: topicObj,\n      toggleModal: () => toggleModalHandler(setModal),\n      labelsGetter: getCurrentLabels,\n      publishHandler: updateLabelsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true);\n}\nconst TopicWrapper = styled.div`\n    flex-basis: 30%;\n    padding: 1rem;\n    cursor: pointer;\n`;\nconst TopicContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-start;\n    padding: 1rem;\n    background-color: ${MainSecondary};\n    border-radius: 0.3rem;\n`;\nconst TopicHeader = styled.h3`\n    width: 100%;\n    margin-bottom: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-bottom: 1px solid black;\n    font-size: 1.5rem;\n`;\nconst Controls = styled.div`\n    margin-top: 0.5rem;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\nconst DeleteTopic = styled.button.attrs(props => {\n  id: props.id;\n})`\n    padding: 0.3rem;\n    border: none;\n    background-color: black;\n    color: white;\n    font-size: 1.2rem;\n    border-radius: 0.3rem;\n    cursor: pointer;\n`;\nconst LabelsContainer = styled.div`\n    width: 100%;\n    margin: 0.5rem 0rem;\n    padding-top: 1rem;\n    max-height: 7rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-start;\n    overflow-y: scroll;\n`;\nconst Label = styled.p`\n    padding: 0.2rem;\n    font-size: 1.2rem;\n`;\nconst TimeStamp = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n`;","map":{"version":3,"sources":["/home/dima/Desktop/next-practise/next-notes/components/Topic/index.tsx"],"names":["useState","styled","toggleModalHandler","LabelModal","StatusModal","MainSecondary","TopicModal","topic","deleteTopic","topicObj","setTopic","showModal","setModal","getCurrentLabels","updated","updatedTopic","labels","updateLabelsHandler","label","push","id","text","fire","title","prevState","length","map","createdAt","TopicWrapper","div","TopicContainer","TopicHeader","h3","Controls","DeleteTopic","button","attrs","props","LabelsContainer","Label","p","TimeStamp"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { toggleModalHandler } from '../../utils/handlers';\nimport LabelModal from '../LabelModal';\nimport { StatusModal } from '../common/StatusModal';\nimport { MainSecondary } from '../../constants/stylesConstants';\n\nexport default function TopicModal({ topic, deleteTopic }) {\n    const [topicObj, setTopic] = useState(topic);\n    const [showModal, setModal] = useState(false);\n\n    const getCurrentLabels = updated => {\n        const updatedTopic = {\n            ...topic,\n            labels: updated\n        };\n\n        setTopic(updatedTopic);\n    }\n\n    const updateLabelsHandler = label => {\n        const labels = [...topicObj.labels];\n        labels.push({\n            id: label,\n            text: label\n        });\n        StatusModal.fire({\n            title: 'Label added!'\n        })\n        setTopic(prevState => {\n            return {\n                ...prevState,\n                labels\n            }\n        });\n    }\n\n    return (\n        <>\n            <TopicWrapper>\n                <TopicContainer\n                    onClick={() => toggleModalHandler(setModal)}\n                >\n                    <TopicHeader>\n                        {topicObj.text}\n                    </TopicHeader>\n                    {\n                        !topicObj.labels.length ?\n                            null : <LabelsContainer>\n                                {\n                                    topicObj.labels.map(label => {\n                                        return (\n                                            <Label key={label.id}>- {label.text}</Label>\n                                        )\n                                    })\n                                }\n                            </LabelsContainer>\n                    }\n                    <TimeStamp>\n                        {topicObj.createdAt}\n                    </TimeStamp>\n                </TopicContainer>\n                <Controls>\n                    <DeleteTopic\n                        id={topicObj.id}\n                        onClick={deleteTopic}\n                    >Delete topic</DeleteTopic>\n                </Controls>\n            </TopicWrapper>\n            {\n                showModal ? <LabelModal\n                    topic={topicObj}\n                    toggleModal={() => toggleModalHandler(setModal)}\n                    labelsGetter={getCurrentLabels}\n                    publishHandler={updateLabelsHandler}\n                /> : null\n            }\n        </>\n    )\n}\n\nconst TopicWrapper = styled.div`\n    flex-basis: 30%;\n    padding: 1rem;\n    cursor: pointer;\n`;\n\nconst TopicContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-start;\n    padding: 1rem;\n    background-color: ${MainSecondary};\n    border-radius: 0.3rem;\n`;\n\nconst TopicHeader = styled.h3`\n    width: 100%;\n    margin-bottom: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-bottom: 1px solid black;\n    font-size: 1.5rem;\n`;\n\nconst Controls = styled.div`\n    margin-top: 0.5rem;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nconst DeleteTopic = styled.button.attrs(props => {\n    id: props.id\n})`\n    padding: 0.3rem;\n    border: none;\n    background-color: black;\n    color: white;\n    font-size: 1.2rem;\n    border-radius: 0.3rem;\n    cursor: pointer;\n`;\n\nconst LabelsContainer = styled.div`\n    width: 100%;\n    margin: 0.5rem 0rem;\n    padding-top: 1rem;\n    max-height: 7rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-start;\n    overflow-y: scroll;\n`;\n\nconst Label = styled.p`\n    padding: 0.2rem;\n    font-size: 1.2rem;\n`;\n\nconst TimeStamp = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n`;"]},"metadata":{},"sourceType":"module"}