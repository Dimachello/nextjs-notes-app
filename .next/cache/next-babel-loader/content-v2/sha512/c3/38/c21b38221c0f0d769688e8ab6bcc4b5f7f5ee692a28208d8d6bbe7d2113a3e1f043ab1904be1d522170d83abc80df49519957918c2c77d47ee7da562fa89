{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dima/Desktop/next-practise/next-notes/components/LabelModal/index.tsx\";\nimport { useState } from 'react';\nimport { inputChangeHandler, deleteButtonHandler } from '../../utils/handlers';\nimport { StatusModal } from '../common/StatusModal';\nimport styled from 'styled-components';\nexport default function LabelModal({\n  topic,\n  toggleModal,\n  labelsGetter,\n  publishHandler\n}) {\n  const {\n    0: labelsList,\n    1: setLabels\n  } = useState(topic.labels);\n  const {\n    0: label,\n    1: setLabel\n  } = useState('');\n\n  const addLabelHandler = () => {\n    if (!label.length) {\n      StatusModal.fire({\n        title: 'Enter label description!',\n        icon: 'warning'\n      });\n      return;\n    }\n\n    setLabels(prevState => {\n      const updated = [...prevState];\n      updated.push({\n        id: label,\n        text: label\n      });\n      return updated;\n    });\n    publishHandler(label);\n    setLabel(() => '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(LabelModalWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CloseModal, {\n      onClick: () => {\n        labelsGetter(labelsList);\n        toggleModal();\n      },\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LabelModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n        children: topic.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), !labelsList.length ? /*#__PURE__*/_jsxDEV(EmptyListWarning, {\n        children: \"Use form below to add a label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(LabelsList, {\n        children: labelsList.map(label => {\n          return /*#__PURE__*/_jsxDEV(LabelsListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: label.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(DeleteLabel, {\n              id: label.id,\n              onClick: event => {\n                deleteButtonHandler(event, labelsList, setLabels, null);\n                StatusModal.fire({\n                  title: 'Label deleted!'\n                });\n              },\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this)]\n          }, label.text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        value: label,\n        onChange: event => inputChangeHandler(event, setLabel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PublishLabel, {\n        onClick: addLabelHandler,\n        children: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\nconst LabelModalWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    min-height: 100vh;\n    min-width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n`;\nconst CloseModal = styled.p`\n    width: 40%;\n    text-align: right;\n    text-decoration: underline;\n    cursor: pointer;\n`;\nconst LabelModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    min-height: 25rem;\n    min-width: 25rem;\n    padding; 1rem 0rem;\n    border: 1px solid black;\n    border-radius: 0.3rem;\n`;\nconst ListHeader = styled.h2``;\nconst EmptyListWarning = styled.h3``;\nconst LabelsList = styled.ul`\n    min-height: 10rem;   \n    max-height: 12rem;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    // justify-content: space-around;\n    align-items: center;\n    list-style: square;\n    overflow-y: scroll;\n`;\nconst LabelsListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 80%;\n    padding: 0.5rem;\n`;\nconst DeleteLabel = styled.span.attrs(props => ({\n  id: props.id\n}))`\n    text-decoration: underline;\n    cursor: pointer;\n`;\nconst LabelInput = styled.input.attrs(props => ({\n  type: 'text',\n  placeholder: 'Enter label description'\n}))`\n    width: 80%;\n    padding: 1rem;\n    border: none;\n    border-radius: 0.3rem;\n    font-size: 1.3rem;\n`;\nconst PublishLabel = styled.button`\n    padding: 0.5rem;\n    margin-top: 1rem;\n    font-size: 1.2rem;\n    border: none;\n    border-radius: 0.3rem;\n    background-color: black;\n    color: white; \n    cursor: pointer;\n`;","map":{"version":3,"sources":["/home/dima/Desktop/next-practise/next-notes/components/LabelModal/index.tsx"],"names":["useState","inputChangeHandler","deleteButtonHandler","StatusModal","styled","LabelModal","topic","toggleModal","labelsGetter","publishHandler","labelsList","setLabels","labels","label","setLabel","addLabelHandler","length","fire","title","icon","prevState","updated","push","id","text","map","event","LabelModalWrapper","div","CloseModal","p","LabelModalContainer","ListHeader","h2","EmptyListWarning","h3","LabelsList","ul","LabelsListItem","li","DeleteLabel","span","attrs","props","LabelInput","input","type","placeholder","PublishLabel","button"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { inputChangeHandler, deleteButtonHandler } from '../../utils/handlers';\nimport { StatusModal } from '../common/StatusModal';\nimport styled from 'styled-components';\n\nexport default function LabelModal({ topic, toggleModal, labelsGetter, publishHandler }) {\n    const [labelsList, setLabels] = useState(topic.labels);\n    const [label, setLabel] = useState('');\n\n    const addLabelHandler = () => {\n        if (!label.length) {\n            StatusModal.fire({\n                title: 'Enter label description!',\n                icon: 'warning'\n            });\n            return;\n        }\n        setLabels(prevState => {\n            const updated = [...prevState];\n            updated.push({\n                id: label,\n                text: label\n            });\n            return updated;\n        })\n        publishHandler(label);\n        setLabel(() => '');\n    }\n\n    return (\n        <LabelModalWrapper>\n            <CloseModal onClick={() => {\n                labelsGetter(labelsList);\n                toggleModal();\n            }}>Close</CloseModal>\n            <LabelModalContainer>\n                <ListHeader>{topic.text}</ListHeader>\n                {\n                    !labelsList.length ?\n                        <EmptyListWarning>Use form below to add a label</EmptyListWarning> :\n                        <LabelsList>\n                            {\n                                labelsList.map(label => {\n                                    return (\n                                        <LabelsListItem key={label.text}>\n                                            <span>{label.text}</span>\n                                            <DeleteLabel\n                                                id={label.id}\n                                                onClick={event => {\n                                                    deleteButtonHandler(event, labelsList, setLabels, null);\n                                                    StatusModal.fire({\n                                                        title: 'Label deleted!'\n                                                    })\n                                                }}\n                                            >delete</DeleteLabel>\n                                        </LabelsListItem>\n                                    )\n                                })\n                            }\n                        </LabelsList>\n                }\n                <LabelInput\n                    value={label}\n                    onChange={event => inputChangeHandler(event, setLabel)}\n                />\n                <PublishLabel onClick={addLabelHandler}>Add label</PublishLabel>\n            </LabelModalContainer>\n        </LabelModalWrapper>\n    )\n}\n\nconst LabelModalWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    min-height: 100vh;\n    min-width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n`;\n\nconst CloseModal = styled.p`\n    width: 40%;\n    text-align: right;\n    text-decoration: underline;\n    cursor: pointer;\n`;\n\nconst LabelModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    min-height: 25rem;\n    min-width: 25rem;\n    padding; 1rem 0rem;\n    border: 1px solid black;\n    border-radius: 0.3rem;\n`;\n\nconst ListHeader = styled.h2``;\n\nconst EmptyListWarning = styled.h3``;\n\nconst LabelsList = styled.ul`\n    min-height: 10rem;   \n    max-height: 12rem;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    // justify-content: space-around;\n    align-items: center;\n    list-style: square;\n    overflow-y: scroll;\n`;\n\nconst LabelsListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 80%;\n    padding: 0.5rem;\n`;\n\nconst DeleteLabel = styled.span.attrs(props => ({\n    id: props.id\n}))`\n    text-decoration: underline;\n    cursor: pointer;\n`;\n\nconst LabelInput = styled.input.attrs(props => ({\n    type: 'text',\n    placeholder: 'Enter label description'\n}))`\n    width: 80%;\n    padding: 1rem;\n    border: none;\n    border-radius: 0.3rem;\n    font-size: 1.3rem;\n`;\n\nconst PublishLabel = styled.button`\n    padding: 0.5rem;\n    margin-top: 1rem;\n    font-size: 1.2rem;\n    border: none;\n    border-radius: 0.3rem;\n    background-color: black;\n    color: white; \n    cursor: pointer;\n`;\n\n"]},"metadata":{},"sourceType":"module"}