{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/dima/Desktop/next-practise/next-notes/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/dima/Desktop/next-practise/next-notes/components/LabelModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { inputChangeHandler, deleteButtonHandler } from '../../utils/handlers';\nimport { StatusModal } from '../common/StatusModal';\nimport styled from 'styled-components';\nexport default function LabelModal(_ref) {\n  _s();\n\n  var _this = this;\n\n  var topic = _ref.topic,\n      toggleModal = _ref.toggleModal,\n      labelsGetter = _ref.labelsGetter,\n      publishHandler = _ref.publishHandler;\n\n  var _useState = useState(topic.labels),\n      labelsList = _useState[0],\n      setLabels = _useState[1];\n\n  var _useState2 = useState(''),\n      label = _useState2[0],\n      setLabel = _useState2[1];\n\n  var addLabelHandler = function addLabelHandler() {\n    if (!label.length) {\n      StatusModal.fire({\n        title: 'Enter label description!',\n        icon: 'warning'\n      });\n      return;\n    }\n\n    setLabels(function (prevState) {\n      var updated = _toConsumableArray(prevState);\n\n      updated.push({\n        id: label,\n        text: label\n      });\n      return updated;\n    });\n    publishHandler(label);\n    setLabel(function () {\n      return '';\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LabelModalWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CloseModal, {\n      onClick: function onClick() {\n        labelsGetter(labelsList);\n        toggleModal();\n      },\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LabelModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n        children: topic.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), !labelsList.length ? /*#__PURE__*/_jsxDEV(EmptyListWarning, {\n        children: \"Use form below to add a label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(LabelsList, {\n        children: labelsList.map(function (label) {\n          return /*#__PURE__*/_jsxDEV(LabelsListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: label.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, _this), /*#__PURE__*/_jsxDEV(DeleteLabel, {\n              id: label.id,\n              onClick: function onClick(event) {\n                deleteButtonHandler(event, labelsList, setLabels, null);\n                StatusModal.fire({\n                  title: 'Label deleted!'\n                });\n              },\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, _this)]\n          }, label.text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        value: label,\n        onChange: function onChange(event) {\n          return inputChangeHandler(event, setLabel);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PublishLabel, {\n        onClick: addLabelHandler,\n        children: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LabelModal, \"8nPPADu5a7QVz+H+l9MarRGYhTU=\");\n\n_c = LabelModal;\nvar LabelModalWrapper = styled.div.withConfig({\n  displayName: \"LabelModal__LabelModalWrapper\",\n  componentId: \"t9deg5-0\"\n})([\"position:fixed;top:0;left:0;min-height:100vh;min-width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;background-color:white;\"]);\n_c2 = LabelModalWrapper;\nvar CloseModal = styled.p.withConfig({\n  displayName: \"LabelModal__CloseModal\",\n  componentId: \"t9deg5-1\"\n})([\"width:40%;text-align:right;text-decoration:underline;cursor:pointer;\"]);\n_c3 = CloseModal;\nvar LabelModalContainer = styled.div.withConfig({\n  displayName: \"LabelModal__LabelModalContainer\",\n  componentId: \"t9deg5-2\"\n})([\"display:flex;flex-direction:column;justify-content:space-around;align-items:center;min-height:25rem;min-width:25rem;padding:1rem 0rem;border:1px solid black;border-radius:0.3rem;\"]);\n_c4 = LabelModalContainer;\nvar ListHeader = styled.h2.withConfig({\n  displayName: \"LabelModal__ListHeader\",\n  componentId: \"t9deg5-3\"\n})([\"\"]);\n_c5 = ListHeader;\nvar EmptyListWarning = styled.h3.withConfig({\n  displayName: \"LabelModal__EmptyListWarning\",\n  componentId: \"t9deg5-4\"\n})([\"\"]);\n_c6 = EmptyListWarning;\nvar LabelsList = styled.ul.withConfig({\n  displayName: \"LabelModal__LabelsList\",\n  componentId: \"t9deg5-5\"\n})([\"min-height:10rem;max-height:12rem;width:100%;display:flex;flex-direction:column;align-items:center;list-style:square;overflow-y:scroll;\"]);\n_c7 = LabelsList;\nvar LabelsListItem = styled.li.withConfig({\n  displayName: \"LabelModal__LabelsListItem\",\n  componentId: \"t9deg5-6\"\n})([\"display:flex;justify-content:space-between;align-items:center;width:80%;padding:0.5rem;\"]);\n_c8 = LabelsListItem;\nvar DeleteLabel = styled.span.attrs(function (props) {\n  return {\n    id: props.id\n  };\n}).withConfig({\n  displayName: \"LabelModal__DeleteLabel\",\n  componentId: \"t9deg5-7\"\n})([\"text-decoration:underline;cursor:pointer;\"]);\n_c9 = DeleteLabel;\nvar LabelInput = styled.input.attrs(function (props) {\n  return {\n    type: 'text',\n    placeholder: 'Enter label description'\n  };\n}).withConfig({\n  displayName: \"LabelModal__LabelInput\",\n  componentId: \"t9deg5-8\"\n})([\"width:80%;padding:1rem;border:none;border-radius:0.3rem;font-size:1.3rem;\"]);\n_c10 = LabelInput;\nvar PublishLabel = styled.button.withConfig({\n  displayName: \"LabelModal__PublishLabel\",\n  componentId: \"t9deg5-9\"\n})([\"padding:0.5rem;margin-top:1rem;font-size:1.2rem;border:none;border-radius:0.3rem;background-color:black;color:white;cursor:pointer;\"]);\n_c11 = PublishLabel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"LabelModal\");\n$RefreshReg$(_c2, \"LabelModalWrapper\");\n$RefreshReg$(_c3, \"CloseModal\");\n$RefreshReg$(_c4, \"LabelModalContainer\");\n$RefreshReg$(_c5, \"ListHeader\");\n$RefreshReg$(_c6, \"EmptyListWarning\");\n$RefreshReg$(_c7, \"LabelsList\");\n$RefreshReg$(_c8, \"LabelsListItem\");\n$RefreshReg$(_c9, \"DeleteLabel\");\n$RefreshReg$(_c10, \"LabelInput\");\n$RefreshReg$(_c11, \"PublishLabel\");","map":{"version":3,"sources":["/home/dima/Desktop/next-practise/next-notes/components/LabelModal/index.tsx"],"names":["useState","inputChangeHandler","deleteButtonHandler","StatusModal","styled","LabelModal","topic","toggleModal","labelsGetter","publishHandler","labels","labelsList","setLabels","label","setLabel","addLabelHandler","length","fire","title","icon","prevState","updated","push","id","text","map","event","LabelModalWrapper","div","CloseModal","p","LabelModalContainer","ListHeader","h2","EmptyListWarning","h3","LabelsList","ul","LabelsListItem","li","DeleteLabel","span","attrs","props","LabelInput","input","type","placeholder","PublishLabel","button"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { inputChangeHandler, deleteButtonHandler } from '../../utils/handlers';\nimport { StatusModal } from '../common/StatusModal';\nimport styled from 'styled-components';\n\nexport default function LabelModal({ topic, toggleModal, labelsGetter, publishHandler }) {\n    const [labelsList, setLabels] = useState(topic.labels);\n    const [label, setLabel] = useState('');\n\n    const addLabelHandler = () => {\n        if (!label.length) {\n            StatusModal.fire({\n                title: 'Enter label description!',\n                icon: 'warning'\n            });\n            return;\n        }\n        setLabels(prevState => {\n            const updated = [...prevState];\n            updated.push({\n                id: label,\n                text: label\n            });\n            return updated;\n        })\n        publishHandler(label);\n        setLabel(() => '');\n    }\n\n    return (\n        <LabelModalWrapper>\n            <CloseModal onClick={() => {\n                labelsGetter(labelsList);\n                toggleModal();\n            }}>Close</CloseModal>\n            <LabelModalContainer>\n                <ListHeader>{topic.text}</ListHeader>\n                {\n                    !labelsList.length ?\n                        <EmptyListWarning>Use form below to add a label</EmptyListWarning> :\n                        <LabelsList>\n                            {\n                                labelsList.map(label => {\n                                    return (\n                                        <LabelsListItem key={label.text}>\n                                            <span>{label.text}</span>\n                                            <DeleteLabel\n                                                id={label.id}\n                                                onClick={event => {\n                                                    deleteButtonHandler(event, labelsList, setLabels, null);\n                                                    StatusModal.fire({\n                                                        title: 'Label deleted!'\n                                                    })\n                                                }}\n                                            >delete</DeleteLabel>\n                                        </LabelsListItem>\n                                    )\n                                })\n                            }\n                        </LabelsList>\n                }\n                <LabelInput\n                    value={label}\n                    onChange={event => inputChangeHandler(event, setLabel)}\n                />\n                <PublishLabel onClick={addLabelHandler}>Add label</PublishLabel>\n            </LabelModalContainer>\n        </LabelModalWrapper>\n    )\n}\n\nconst LabelModalWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    min-height: 100vh;\n    min-width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n`;\n\nconst CloseModal = styled.p`\n    width: 40%;\n    text-align: right;\n    text-decoration: underline;\n    cursor: pointer;\n`;\n\nconst LabelModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    min-height: 25rem;\n    min-width: 25rem;\n    padding: 1rem 0rem;\n    border: 1px solid black;\n    border-radius: 0.3rem;\n`;\n\nconst ListHeader = styled.h2``;\n\nconst EmptyListWarning = styled.h3``;\n\nconst LabelsList = styled.ul`\n    min-height: 10rem;   \n    max-height: 12rem;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    list-style: square;\n    overflow-y: scroll;\n`;\n\nconst LabelsListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 80%;\n    padding: 0.5rem;\n`;\n\nconst DeleteLabel = styled.span.attrs(props => ({\n    id: props.id\n}))`\n    text-decoration: underline;\n    cursor: pointer;\n`;\n\nconst LabelInput = styled.input.attrs(props => ({\n    type: 'text',\n    placeholder: 'Enter label description'\n}))`\n    width: 80%;\n    padding: 1rem;\n    border: none;\n    border-radius: 0.3rem;\n    font-size: 1.3rem;\n`;\n\nconst PublishLabel = styled.button`\n    padding: 0.5rem;\n    margin-top: 1rem;\n    font-size: 1.2rem;\n    border: none;\n    border-radius: 0.3rem;\n    background-color: black;\n    color: white; \n    cursor: pointer;\n`;\n\n"]},"metadata":{},"sourceType":"module"}